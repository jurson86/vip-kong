<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuandai.ms.ar.dao.KongUserMapper">
  <resultMap id="BaseResultMap" type="com.tuandai.ms.ar.model.user.KongUser">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="default_kong_group" jdbcType="VARCHAR" property="defaultKongGroup" />
    <result column="manager_flag" jdbcType="TINYINT" property="managerFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, password, salt, email, mobile, status, default_kong_group,
    manager_flag, create_time, real_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kong_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <insert id="insert" parameterType="com.tuandai.ms.ar.model.user.KongUser" keyProperty="userId" useGeneratedKeys="true">
    insert into kong_user (user_id, username, password, 
      salt, email, mobile, 
      status, default_kong_group,
      manager_flag, create_time,real_name)
    values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{defaultKongGroup,jdbcType=VARCHAR},
      #{managerFlag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{realName,jdbcType=VARCHAR})
  </insert>

  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from kong_user
    where username = #{userName,jdbcType=BIGINT}
  </select>

  <!-- 管理员设置默认的组 和 服务器 -->
  <update id="setDefaultGroup">
    update kong_user
    set
        default_kong_group = #{defaultGroup,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <resultMap id="KongUserDTOMap" type="com.tuandai.ms.ar.dto.resp.KongUserDTO">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="manager_flag" jdbcType="TINYINT" property="managerFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <!-- 查询组中用户 -->
  <select id = "selectGroupUserPageList" parameterType="com.tuandai.ms.ar.dto.req.QueryUserReq" resultMap="KongUserDTOMap">
    SELECT
        konguser.user_id, konguser.username,konguser.real_name, konguser.email, konguser.mobile, konguser.status,konguser.create_time
    FROM kong_user konguser
    INNER JOIN kong_user_group usergroup ON usergroup.user_id = konguser.user_id
    WHERE usergroup.`kong_group` = #{groupName}
    <if test="managerFlag != null and managerFlag == 0">
        AND konguser.`manager_flag` = 0
    </if>
    <if test="realName != null and realName != ''">
      AND konguser.`real_name` like concat('%',#{realName},'%')
    </if>
    <if test="username != null and username != ''">
      AND konguser.`username` like concat('%',#{username},'%')
    </if>
    ORDER BY konguser.user_id DESC
  </select>

  <!-- 修改用户状态 -->
  <update id = "updateUserStatus">
    update kong_user
    set status = #{status,jdbcType = TINYINT}
    where user_id = #{userId}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.tuandai.ms.ar.model.user.KongUser">
    update kong_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="defaultKongGroup != null">
        default_kong_group = #{defaultKongGroup,jdbcType=VARCHAR},
      </if>
      <if test="managerFlag != null">
        manager_flag = #{managerFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <update id="updatePassword" >
    update kong_user
        set password = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>